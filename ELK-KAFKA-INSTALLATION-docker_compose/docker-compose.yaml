version: "3.7"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - esnet

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
      - esnet

  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.4.9
    container_name: kafka-connect
    ports:
      - '8083:8083'
    depends_on:
      - zookeeper
      - kafka
      - elasticsearch
    volumes:
      - ./connect-plugins:/connect-plugins
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: 'connect'
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CONNECT_PLUGIN_PATH: /connect-plugins
      ELASTICSEARCH_HOST: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: 9x2uqXFOWJNInmOe2ga1
    networks:
      - esnet

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTICSEARCH_PASSWORD=hvqCFGOhRQ7rgCgfq2ta

    networks:
      - esnet

  logstash:
    container_name: logstash-cntr
    image: logstash:7.9.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - xpack.monitoring.enabled=false
    volumes:
      - ./logstash-kafka.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    restart: always
    networks:
      - esnet
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://logstash-cntr:9600" ]
      interval: 30s
      timeout: 15s
      retries: 3


  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED=true
      - XPACK_SECURITY_ENABLED=true
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=ITP5U9Lmv22bvSRY6NRn


    depends_on:
      - elasticsearch
    networks:
      - esnet

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.13.2
    restart: always
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
      - output.elasticsearch.username=elastic
      - output.elasticsearch.password=9x2uqXFOWJNInmOe2ga1
      - apm-server.host=0.0.0.0:8200
      - apm-server.rum.enabled=true
      - setup.kibana.host=http://kibana:5601
    networks:
      - esnet

networks:
  esnet:
    driver: bridge

volumes:
  data01:
  certs:
